name: Build and Push Docker Image

on:
  push:
    tags: ['v*']
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (e.g., 1.0.0)'
        required: true
        default: '0.0.0.dev0'
      push:
        description: 'Push to registry'
        type: boolean
        default: true

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
            PUSH="${{ github.event.inputs.push }}"
            git tag -f "v$VERSION" HEAD
          else
            VERSION="${GITHUB_REF#refs/tags/v}"
            PUSH="true"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "PUSH=$PUSH" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ env.PUSH }}
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/usda-ars-gbru/tamipami:${{ env.VERSION }}
            ${{ github.event_name != 'workflow_dispatch' && 'ghcr.io/usda-ars-gbru/tamipami:latest' || '' }}
          build-args: SETUPTOOLS_SCM_PRETEND_VERSION=${{ env.VERSION }}
          cache-from: type=registry,ref=ghcr.io/usda-ars-gbru/tamipami:latest
          cache-to: type=registry,ref=ghcr.io/usda-ars-gbru/tamipami:cache,mode=max

      - name: Test image
        if: github.event_name == 'workflow_dispatch' && env.PUSH == 'true'
        run: |
          docker run --rm --entrypoint python ghcr.io/usda-ars-gbru/tamipami:${{ env.VERSION }} -c "import tamipami; print(tamipami.__version__)"