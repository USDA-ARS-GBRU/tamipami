name: Publish Docker image to GitHub Container Registry

on:
  push:
    tags:
      - 'v*'  # Trigger only on version tags like v1.0.0

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      # ‚úÖ Ensure full Git history and tags are available for setuptools_scm
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # üõ†Ô∏è Set up QEMU for cross-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # üõ†Ô∏è Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # üöÄ Cache Docker layers to speed up builds
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # üîê Authenticate with GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # üè∑Ô∏è Extract version tag from Git reference
      - name: Get tag name
        id: get_tag
        run: |
          VERSION_TAG="${GITHUB_REF#refs/tags/}"
          VERSION_CLEAN="${VERSION_TAG#v}"
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV
          echo "VERSION_CLEAN=$VERSION_CLEAN" >> $GITHUB_ENV
          
      # üê≥ Build and push Docker image with dynamic versioning
      - name: Build and push tamipami image
        uses: docker/build-push-action@v6
        env:
          BUILDKIT_CONTEXT_KEEP_GIT_DIR: true  # Ensures .git is preserved for setuptools_scm
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/usda-ars-gbru/tamipami:${{ env.VERSION_CLEAN }}
            ghcr.io/usda-ars-gbru/tamipami:latest
          build-args: |
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
